<apex:page sidebar="false" controller="WaveDataManagerController" action="{!pageLoad}">
	<script>
	function createRemoteSite()
	{
	    // Disable button
	    document.getElementById('createremotesitebtn').disabled = true;
	    
	    // Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
	    var binding = new XMLHttpRequest();
	    var request =
	        '<?xml version="1.0" encoding="utf-8"?>' +
	        '<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
	            '<env:Header>' +
	                '<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' +
	                    '<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' +
	                '</urn:SessionHeader>' +
	            '</env:Header>' +
	            '<env:Body>' +
	                '<createMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' +
	                    '<metadata xsi:type="RemoteSiteSetting">' +
	                        '<fullName>wavedatamanager_mdapi</fullName>' +
	                        '<description>Metadata API Remote Site Setting for Wave Data Manager</description>' +
	                        '<disableProtocolSecurity>false</disableProtocolSecurity>' +
	                        '<isActive>true</isActive>' +
	                        '<url>https://{!Host}</url>' +
	                    '</metadata>' +
	                '</createMetadata>' +
	            '</env:Body>' +
	        '</env:Envelope>';
	    binding.open('POST', 'https://{!Host}/services/Soap/m/31.0');
	    binding.setRequestHeader('SOAPAction','""');
	    binding.setRequestHeader('Content-Type', 'text/xml');
	    binding.onreadystatechange =
	        function() {
	        	if(this.readyState==4) {
	                var parser = new DOMParser();
	                var doc  = parser.parseFromString(this.response, 'application/xml');
	                var errors = doc.getElementsByTagName('errors');
	                var messageText = '';
	                for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
	                    messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
	                displayMetadataResponse(messageText);
	            }
	        }
	    binding.send(request);
	}
	</script>
	<style type="text/css">
		.valignTop {
			vertical-align: top;
		}
		.standardText {
			font-size: 13px;
			line-height: 25px;
		}
	</style>

	<vs:importvisualstrap theme="paper" />

	<apex:sectionHeader title="Wave Data Manager" subtitle="Configuration and Data Loading"/>
	<apex:form style="margin-top: 50px;" styleClass="standardText" rendered="{!pageRendered}">
		<apex:panelGrid columns="2" columnClasses="valignTop">
			<apex:panelGrid columns="1">
				<apex:outputLabel >Please select an App to Load</apex:outputLabel>
		        <apex:selectList value="{!selectedWaveApp}" multiselect="false" size="10" style="width:200px">
		   			<apex:selectOptions value="{!waveApps}"/>
		   			<apex:actionSupport reRender="appDescription,vsbButton,folderName" event="onchange" action="{!waveAppSelected}" />
		   		</apex:selectList>
			</apex:panelGrid>   		
	   		<apex:panelGrid columns="1" width="200px">
	   			<apex:outputText value="Description" style="font-weight: bold" />
	   			<apex:outputText value="{!appDescription}" id="appDescription" />
	   		</apex:panelGrid>
	   		<apex:panelGrid columns="1" width="200px">
	   			<apex:outputLabel >Specify a new folder/app:</apex:outputLabel>
	   			<apex:inputText value="{!folderName}" id="folderName" />
	   			<apex:outputLabel >Specify the dataflow name:</apex:outputLabel>
	   			<apex:inputText value="{!dataflowName}" id="dataflowName" />
	   			<apex:outputLabel >Specify the dataflow label:</apex:outputLabel>
	   			<apex:inputText value="{!dataflowLabel}" id="dataflowLabel" />
	   			<apex:outputLabel >Notify this email when complete:</apex:outputLabel>
	   			<apex:inputText value="{!emailAddress}" id="emailAddress" />
	   		</apex:panelGrid><br />
	   		<vs:visualstrapblock id="vsbButton" style="padding-top: 20px;">
	   			<apex:commandButton value="Install App" styleClass="{!IF(disabledButton, 'disabled','')} btn-primary btn-lg" action="{!installApp}" rendered="{!selectedWaveApp != ''}" id="btnInstallApp" style="text-transform: none;" />
	   			<apex:outputPanel style="margin-left: 15px;" rendered="{!disabledButton}">
	   				<apex:image value="{!$Resource.LoadingGif}"/>
	   			</apex:outputPanel>
	   		</vs:visualstrapblock>
		</apex:panelGrid>
	</apex:form>	
	<apex:form id="form2">
		<apex:actionFunction name="displayMetadataResponse" action="{!displayMetadataResponse}" rerender="form1,form2">
			<apex:param name="metadataResponse" assignTo="{!metadataResponse}" value="{!metadataResponse}"/>
		</apex:actionFunction>		
		<apex:pageMessages />
		<apex:outputPanel rendered="{!MetadataConnectionWarning}">
			<h1>Important Pre Install Step:</h1> 
			<p>In order to utilize the features of this tool you need to permit it to access the Salesforce Metadata API of your organization by adding a <a target="_new" href="http://na1.salesforce.com/help/doc/en/configuring_remoteproxy.htm">Remote Site Setting</a> with this Salesforce Server URL <b>https://{!Host}</b></p>
			<p> Click the <b>Create Remote Site Setting</b> button to have the tool perform this step for you.</p>
			<input id="createremotesitebtn" type="button" onclick="createRemoteSite();" value="Create Remote Site Setting"/>
		</apex:outputPanel>
	</apex:form>
	<apex:form id="form3" styleClass="standardText">
		
		<apex:actionPoller action="{!checkObjectLoadingStatus}" reRender="processingStatus,processingLogConsole,messages,form1,form3,vsbButton" interval="5" enabled="{!objectsNodes.size > 0}" id="checkFunction"/>
		<apex:actionPoller action="{!checkTimeShiftingStatus}" reRender="processingStatus,processingLogConsole,messages,form1,form3,vsbButton" interval="5" enabled="{!timeShiftingItems.size > 0 && enableTimeShiftingCheck}" id="checkTimeShiftingFunction"/>
		
		<!-- Edgemarts Load Panel/Function -->
		<apex:outputPanel id="loadEdgemartsPanel">
			<apex:actionFunction name="loadEdgemarts" action="{!loadAllEdgemarts}" reRender="loadEdgemartsPanel,createDataflowPanel,processingLogPanel,form1,vsbButton" />

			<apex:outputPanel rendered="{!installationStep = 'LoadEdgemarts'}">
				<script type="text/javascript">
					loadEdgemarts();
				</script>
			</apex:outputPanel>
		</apex:outputPanel>

		<!-- Dataflow Create Panel/Function -->
		<apex:outputPanel id="createDataflowPanel">
			<apex:actionFunction name="createDataflow" action="{!createDataflow}" reRender="createDataflowPanel,loadDashboardsPanel,processingLogPanel,form1,vsbButton" />

			<apex:outputPanel rendered="{!installationStep = 'CreateDataflow'}">
				<script type="text/javascript">
					createDataflow();
				</script>
			</apex:outputPanel>
		</apex:outputPanel>

		<!-- Dashboards Load Panel/Function -->
		<apex:outputPanel id="loadDashboardsPanel">
			<apex:actionFunction name="loadDashboards" action="{!loadAllDashboards}" reRender="loadDashboardsPanel,loadObjectsPanel,processingLogPanel,form1,vsbButton" />

			<apex:outputPanel rendered="{!installationStep = 'LoadDashboards'}">
				<script type="text/javascript">
					loadDashboards();
				</script>
			</apex:outputPanel>
		</apex:outputPanel>

		<!-- Objects Load Panel/Function -->
		<apex:outputPanel id="loadObjectsPanel">
			<apex:actionFunction name="loadObjects" action="{!loadAllObjects}" reRender="loadObjectsPanel,form3,processingLogPanel,form1,vsbButton" />

			<apex:outputPanel rendered="{!installationStep = 'LoadObjects'}">
				<script type="text/javascript">
					loadObjects();
				</script>
			</apex:outputPanel>
		</apex:outputPanel>

		<!-- Log Panel -->
		<apex:outputPanel rendered="{!processingLog.size > 0}" id="processingLogPanel">
			<apex:outputText value="Status" id="processingStatus" style="font-weight: bold" />
			<apex:panelGrid columns="1" width="600px" style="border: 1px solid #000;">
				<apex:repeat value="{!processingLog}" var="logEntry" id="processingLogConsole">
					<apex:outputText value="{!logEntry}" /><br />
				</apex:repeat>
			</apex:panelGrid>
		</apex:outputPanel>

	</apex:form>
	<vs:visualstrapblock id="form1">	   		   	
	   	<!--All the  Visualstrap content and Visualforce content here -->
	   	<apex:form rendered="{!!MetadataConnectionWarning}" style="margin-top: 20px;">
	   		<vs:alert type="success" rendered="{!successMessage != ''}">
    			<apex:outputText value="{!successMessage}" />
			</vs:alert>
			<vs:alert type="danger" rendered="{!errorMessage != ''}">
    			<apex:outputText value="{!errorMessage}" />
			</vs:alert>
			<vs:alert type="warning" rendered="{!warningMessage != ''}">
    			<apex:outputText value="{!warningMessage}" />
			</vs:alert>
	   	</apex:form>
	</vs:visualstrapblock>
</apex:page>